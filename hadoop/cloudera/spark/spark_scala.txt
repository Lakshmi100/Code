//find out order that created maximum revenue from the order_items table
// order_items and orders table needs sqoop imported into HDFS before executing
//below scala commands

val ordersItemsRDD = sc.textFile("/user/cloudera/sqoop_import/order_items")

//orderItemsMap will have order_id from order_items table and the order_subtotal for that item
val orderItemsMap = ordersItemsRDD.map(rec => (rec.split(",")(1).toInt , rec.split(",")(4).toFloat))
//now get revenue per order , reduceByKey will do that
val revenuePerOrder = orderItemsMap.reduceByKey((acc,value) => acc +value)
revenuePerOrder.reduce((acc,value) => (if (acc._2 >= value._2) acc else value))

//find the high priced product from products table

val productsRDD = sc.textFile("/user/cloudera/sqoop_import/products")
val productPriceMap = productsRDD.map(rec => rec.split(",")(4))
//there is a data fix here , need to get the HDFS files for products into ur local
//and delete record with product_id 685 

hadoop fs -get /user/cloudera/sqoop_import/products
#Delete the record with product_id 685
hadoop fs -put -f products/part* /user/cloudera/sqoop_import/products

val highPrcProduct = productPriceMap.reduce((p1 ,p2) => (if (p1.toFloat >= p2.toFloat) p1 else p2))


